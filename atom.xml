<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>FIRE个人博客</title>
  
  <subtitle>千里之行始于足下</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.jameskebi.club/"/>
  <updated>2019-01-23T06:11:00.096Z</updated>
  <id>http://www.jameskebi.club/</id>
  
  <author>
    <name>FIRE</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>超实用git操作</title>
    <link href="http://www.jameskebi.club/2019/01/22/%E8%B6%85%E5%AE%9E%E7%94%A8git%E6%93%8D%E4%BD%9C/"/>
    <id>http://www.jameskebi.club/2019/01/22/超实用git操作/</id>
    <published>2019-01-22T08:52:26.000Z</published>
    <updated>2019-01-23T06:11:00.096Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Wed Jan 23 2019 14:13:03 GMT+0800 (中国标准时间) --><h2 id="git概念"><a href="#git概念" class="headerlink" title="git概念"></a>git概念</h2><p><img src="/2019/01/22/超实用git操作/1.png" alt="git"><br>你的本地仓库是由git维护的三棵树组成。</p><p>1.你的工作目录，它存放实际的文件。</p><p>2，暂存区（index），它像个缓存区，临时保存你文件的改动。</p><p>3，HEAD,它指向最后一次的提交结果。</p><p>代码进入每一个区域成功后会产生一种状态，再加上初始的状态，一共是<em>5种状态</em>。</p><p>*未修改（Origin）</p><p>*已修改（Modified）</p><p>*已暂存（Staged）</p><p>*已提交（Committed）</p><p>*已推送（Pushed）<br><img src="/2019/01/22/超实用git操作/2.png" alt="git"></p><h3 id="1-已修改，未暂存"><a href="#1-已修改，未暂存" class="headerlink" title="1,已修改，未暂存"></a>1,已修改，未暂存</h3><p>如果我们只是修改了文件，但是并没有执行git add. 这时候文件还在工作区，并没有进入暂存区，可以用如下命令进行<strong>撤销</strong>操作。</p><p>另外，如果你修改了本地代码，但是你本地的代码和远程的代码冲突了，你可以用【git stash】把代码保存在git栈中，这时候你可以</p><p>git pull下代码，然后git stash pop把git栈中的代码弹出来，和本地代码合并，解决冲突，这时候你可以提交代码。</p><p>【git stash list】查看git栈中的代码信息，git stash pop stash{0}弹出第0个git栈中的code.</p><p><em>git checkout .</em> 或者执行：<strong>git reset –hard</strong></p><p>也就是说git add . 的反向操作是git checkout .</p><p><img src="/2019/01/22/超实用git操作/3.jpg" alt="git"></p><h3 id="2-已暂存，未提交"><a href="#2-已暂存，未提交" class="headerlink" title="2,已暂存，未提交"></a>2,已暂存，未提交</h3><p>如果你的代码已经执行了git add. 但是还没有执行git commit -m”comment”,这个阶段，想要撤销，可以执行如下命令：</p><p>git reset</p><p>git checkout .</p><p>也可以执行 git reset –hard</p><p>git reset 只是把修改退回到了 git add.之前的状态，也就是文件本事还处于【已修改】【未暂存】的状态，你如果想退回未修改状态，还需要执行git checkout.</p><h4 id="3-已提交，未推送"><a href="#3-已提交，未推送" class="headerlink" title="3,已提交，未推送"></a>3,已提交，未推送</h4><p>如果你的代码即执行了git add . 又执行了git commit ,这时候你的代码已经进入了本地仓库，然后你后悔了，想退回来，这时候怎么办?可以执行下面的命令：</p><p>【git reset –hard origin/master】，不过这样写会把你已修改未暂存的，已暂存未提交的代码全部还原。</p><p>还是git reset –hard命令，不过这次多了一个参数 origin/master ,origin/master代表远程仓库，既然你已经污染了你的本地仓库，那么从远程把代码拉取回来。</p><h4 id="4，已推送"><a href="#4，已推送" class="headerlink" title="4，已推送"></a>4，已推送</h4><p>更糟糕的是，你即git add 了，又commit了，并且push了，你危险了。</p><p>这时候你的代码已经进入了远程仓库。如果想要撤销，执行如下命令：</p><p>git reset –hard HEAD^</p><p>git push -f</p><p>由于你的本地仓库和远程仓库是等价的，这时候你只需要先回复本地仓库，在强制提交到远程仓库就好了。</p><p><img src="/2019/01/22/超实用git操作/4.jpg" alt="git"></p><h4 id="5，pull错了分支"><a href="#5，pull错了分支" class="headerlink" title="5，pull错了分支"></a>5，pull错了分支</h4><p>git reflow或者git reflog 查看以下提交记录：</p><p>git reset –hard HEAD@{n}</p><p>如上图，我们要撤销到上一次提交的状态：</p><p>git reset –hard HEAD@{1}</p><p>或者</p><p>git reset –hard C580f6ee</p><p><img src="/2019/01/22/超实用git操作/5.bmp" alt="git"></p><p>总结，上面针对的是全文件的操作，针对某个具体的文件的操作没有说明，后续我会继续更新，Thanks!</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="技术" scheme="http://www.jameskebi.club/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>Markdown排版</title>
    <link href="http://www.jameskebi.club/2019/01/20/Markdown%E6%8E%92%E7%89%88/"/>
    <id>http://www.jameskebi.club/2019/01/20/Markdown排版/</id>
    <published>2019-01-20T02:25:07.000Z</published>
    <updated>2019-01-20T04:03:18.218Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Wed Jan 23 2019 14:13:03 GMT+0800 (中国标准时间) --><p><img src="/2019/01/20/Markdown排版/ouwen1.jpg" alt="欧文"></p><h2 id="什么是Markdown语言"><a href="#什么是Markdown语言" class="headerlink" title="什么是Markdown语言"></a>什么是Markdown语言</h2><p>markdown是在2004年由john Gruber创造的，Markdown是一种标记语言，使用各种标记符号赋予文字不同的格式。<br>并且，可以将带有标记符号和文本混合的内容，转换为一种带有固定格式的排版效果。</p><h2 id="markdown特点"><a href="#markdown特点" class="headerlink" title="markdown特点"></a>markdown特点</h2><h3 id="高效排版"><a href="#高效排版" class="headerlink" title="高效排版"></a>高效排版</h3><h4 id="1，一次排版，适用于多个平台"><a href="#1，一次排版，适用于多个平台" class="headerlink" title="1，一次排版，适用于多个平台"></a>1，一次排版，适用于多个平台</h4><h4 id="2，不再需要逐个平台修改格式"><a href="#2，不再需要逐个平台修改格式" class="headerlink" title="2，不再需要逐个平台修改格式"></a>2，不再需要逐个平台修改格式</h4><h4 id="3，不需要在学习其他编辑器的使用"><a href="#3，不需要在学习其他编辑器的使用" class="headerlink" title="3，不需要在学习其他编辑器的使用"></a>3，不需要在学习其他编辑器的使用</h4><h3 id="高效写作"><a href="#高效写作" class="headerlink" title="高效写作"></a>高效写作</h3><h4 id="1，没有各种按钮，专注于内容输出"><a href="#1，没有各种按钮，专注于内容输出" class="headerlink" title="1，没有各种按钮，专注于内容输出"></a>1，没有各种按钮，专注于内容输出</h4><h4 id="2，云端保存，不怕丢失"><a href="#2，云端保存，不怕丢失" class="headerlink" title="2，云端保存，不怕丢失"></a>2，云端保存，不怕丢失</h4><h4 id="3，多格式导出，HTml-PDF"><a href="#3，多格式导出，HTml-PDF" class="headerlink" title="3，多格式导出，HTml,PDF,"></a>3，多格式导出，HTml,PDF,</h4><h4 id="4，多适用平台-微信，简书"><a href="#4，多适用平台-微信，简书" class="headerlink" title="4，多适用平台 微信，简书"></a>4，多适用平台 微信，简书</h4><h2 id="markdown语法"><a href="#markdown语法" class="headerlink" title="markdown语法"></a>markdown语法</h2><h3 id="分级标题"><a href="#分级标题" class="headerlink" title="分级标题"></a>分级标题</h3><p>#一级标题</p><p>##二级标题</p><p>###三级标题</p><p>#####四级标题</p><h3 id="文字加粗"><a href="#文字加粗" class="headerlink" title="文字加粗"></a>文字<strong>加粗</strong></h3><p>加粗文字前后加两个*即可。</p><h3 id="文字引用"><a href="#文字引用" class="headerlink" title="文字引用"></a>文字引用</h3><p>“空格”+“&gt;”+“空格” +引用文字。</p><blockquote><p>文字引用</p></blockquote><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p>使用 ![描述]（图片链接地址）插入图像。</p><p>示例：</p><p><img src="http://img1.gtimg.com/sports/pics/hv1/174/118/1855/120651639.jpg" alt="欧文"></p><h3 id="表格支持"><a href="#表格支持" class="headerlink" title="表格支持"></a>表格支持</h3><table><thead><tr><th>项目</th><th style="text-align:right">价格</th><th style="text-align:center">数量</th></tr></thead><tbody><tr><td>计算机</td><td style="text-align:right">\$1600</td><td style="text-align:center">5</td></tr><tr><td>手机</td><td style="text-align:right">\$12</td><td style="text-align:center">12</td></tr><tr><td>ipad</td><td style="text-align:right">\$1000</td><td style="text-align:center">4</td></tr></tbody></table><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>HEXO搭建的第一个博客</title>
    <link href="http://www.jameskebi.club/2019/01/06/HEXO%E6%90%AD%E5%BB%BA%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://www.jameskebi.club/2019/01/06/HEXO搭建的第一个博客/</id>
    <published>2019-01-06T01:52:11.000Z</published>
    <updated>2019-01-08T09:09:39.151Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Wed Jan 23 2019 14:13:03 GMT+0800 (中国标准时间) --><p>首先非常感谢大家能来我的博客空间，接触HEXO不到一周的时间，可以说我是完全从网上查找的各种资料才一步步的搭建起来的博客。</p><p>其实这个搭建博客没有什么难度，都是用node的npm语法下载node_modules,网上都有教程。唯一让我感兴趣的是每完成一步是非常有</p><p>成就感的，下面说说我的HEXO搭建的过程。</p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><h3 id="第一步，安装git"><a href="#第一步，安装git" class="headerlink" title="第一步，安装git"></a>第一步，安装git</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这个其实去官网下载个git 包手动安装就可以了。</span><br><span class="line"></span><br><span class="line">具体的环境变量配置可以百度，有很多的教程。</span><br></pre></td></tr></table></figure><p><a href="https://git-for-windows.github.io/" target="_blank" rel="noopener">Git下载地址</a></p><h3 id="第二步，下载安装node-js"><a href="#第二步，下载安装node-js" class="headerlink" title="第二步，下载安装node.js"></a>第二步，下载安装node.js</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">这个也需要从官方网站下载nodejs，然后next安装。[Nodejs下载地址]</span><br><span class="line">(https://nodejs.org/en/)</span><br></pre></td></tr></table></figure><h3 id="第三步：安装hexo"><a href="#第三步：安装hexo" class="headerlink" title="第三步：安装hexo"></a>第三步：安装hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">百度上说的都是安装完git以后，新建一个目录鼠标右键选择Git Bash here,我是用的</span><br><span class="line">vscode编辑器，在vscode terminal运动npm install -g hexo，如果被墙掉了，</span><br><span class="line">那就做阿里的淘宝镜像，网上有教程。然后运行hexo init 这时候发现你运行的目</span><br><span class="line">录多了一个hexo文件夹。文件加默认的是landscape的主题</span><br><span class="line">我用的是next主题的pisces，命令</span><br><span class="line">【git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-nextthemes/next】</span><br><span class="line">Hexo文件夹的主要配置是config.yml，可以网站的展示项基本上在这个文件配置，</span><br><span class="line">当然样式需要手动配置其他的文件。然后在终端运行hexo g,</span><br><span class="line">（ g代表gernate生成的意思），hexo s （s代表start的意思），  </span><br><span class="line">在浏览器输入：localhost：4000 ，就可以进行访问了。默认开启的是4000端口。</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="技术" scheme="http://www.jameskebi.club/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://www.jameskebi.club/2019/01/04/README/"/>
    <id>http://www.jameskebi.club/2019/01/04/README/</id>
    <published>2019-01-04T05:10:18.436Z</published>
    <updated>2019-01-08T08:53:43.481Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- build time:Wed Jan 23 2019 14:13:03 GMT+0800 (中国标准时间) --><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
  </entry>
  
</feed>
